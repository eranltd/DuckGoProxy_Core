[{"C:\\My Projects\\duck-go-proxy_react\\src\\index.js":"1","C:\\My Projects\\duck-go-proxy_react\\src\\App.js":"2","C:\\My Projects\\duck-go-proxy_react\\src\\reportWebVitals.js":"3","C:\\My Projects\\duck-go-proxy_react\\src\\theme.js":"4","C:\\My Projects\\duck-go-proxy_react\\src\\providers\\ViewportProvider.jsx":"5","C:\\My Projects\\duck-go-proxy_react\\src\\components\\Desktop\\AppDesktop.jsx":"6","C:\\My Projects\\duck-go-proxy_react\\src\\components\\Mobile\\AppMobile.jsx":"7","C:\\My Projects\\duck-go-proxy_react\\src\\components\\Mobile\\RoutesMobile.jsx":"8","C:\\My Projects\\duck-go-proxy_react\\src\\components\\shared\\NavBar\\NavBar.jsx":"9","C:\\My Projects\\duck-go-proxy_react\\src\\components\\Mobile\\Home\\Home.component.jsx":"10","C:\\My Projects\\duck-go-proxy_react\\src\\components\\Desktop\\RoutesDesktop.jsx":"11","C:\\My Projects\\duck-go-proxy_react\\src\\components\\Mobile\\DuckGoForm\\DuckGoForm.component.jsx":"12","C:\\My Projects\\duck-go-proxy_react\\src\\components\\Mobile\\Topics\\Topics.component.jsx":"13","C:\\My Projects\\duck-go-proxy_react\\src\\components\\shared\\SearchHistory\\SearchHistory.component.jsx":"14","C:\\My Projects\\duck-go-proxy_react\\src\\custom-hooks\\useFetch.jsx":"15","C:\\My Projects\\DuckGoProxy_Core\\DuckGoProxy_Core\\ClientApp\\src\\index.js":"16","C:\\My Projects\\DuckGoProxy_Core\\DuckGoProxy_Core\\ClientApp\\src\\reportWebVitals.js":"17","C:\\My Projects\\DuckGoProxy_Core\\DuckGoProxy_Core\\ClientApp\\src\\App.js":"18","C:\\My Projects\\DuckGoProxy_Core\\DuckGoProxy_Core\\ClientApp\\src\\theme.js":"19","C:\\My Projects\\DuckGoProxy_Core\\DuckGoProxy_Core\\ClientApp\\src\\providers\\ViewportProvider.jsx":"20","C:\\My Projects\\DuckGoProxy_Core\\DuckGoProxy_Core\\ClientApp\\src\\components\\Desktop\\AppDesktop.jsx":"21","C:\\My Projects\\DuckGoProxy_Core\\DuckGoProxy_Core\\ClientApp\\src\\components\\Mobile\\AppMobile.jsx":"22","C:\\My Projects\\DuckGoProxy_Core\\DuckGoProxy_Core\\ClientApp\\src\\components\\Mobile\\Topics\\Topics.component.jsx":"23","C:\\My Projects\\DuckGoProxy_Core\\DuckGoProxy_Core\\ClientApp\\src\\components\\Mobile\\DuckGoForm\\DuckGoForm.component.jsx":"24","C:\\My Projects\\DuckGoProxy_Core\\DuckGoProxy_Core\\ClientApp\\src\\components\\shared\\NavBar\\NavBar.jsx":"25","C:\\My Projects\\DuckGoProxy_Core\\DuckGoProxy_Core\\ClientApp\\src\\components\\Mobile\\RoutesMobile.jsx":"26","C:\\My Projects\\DuckGoProxy_Core\\DuckGoProxy_Core\\ClientApp\\src\\components\\Desktop\\RoutesDesktop.jsx":"27","C:\\My Projects\\DuckGoProxy_Core\\DuckGoProxy_Core\\ClientApp\\src\\components\\shared\\SearchHistory\\SearchHistory.component.jsx":"28","C:\\My Projects\\DuckGoProxy_Core\\DuckGoProxy_Core\\ClientApp\\src\\components\\Mobile\\Home\\Home.component.jsx":"29","C:\\My Projects\\DuckGoProxy_Core\\DuckGoProxy_Core\\ClientApp\\src\\redux\\store.js":"30","C:\\My Projects\\DuckGoProxy_Core\\DuckGoProxy_Core\\ClientApp\\src\\redux\\reducers\\index.js":"31","C:\\My Projects\\DuckGoProxy_Core\\DuckGoProxy_Core\\ClientApp\\src\\redux\\reducers\\topics.js":"32","C:\\My Projects\\DuckGoProxy_Core\\DuckGoProxy_Core\\ClientApp\\src\\redux\\actionTypes.js":"33","C:\\My Projects\\DuckGoProxy_Core\\DuckGoProxy_Core\\ClientApp\\src\\redux\\reducers\\searchHistory.js":"34","C:\\My Projects\\DuckGoProxy_Core\\DuckGoProxy_Core\\ClientApp\\src\\redux\\selectors.js":"35","C:\\My Projects\\DuckGoProxy_Core\\DuckGoProxy_Core\\ClientApp\\src\\redux\\actions.js":"36","C:\\My Projects\\DuckGoProxy_Core\\DuckGoProxy_Core\\ClientApp\\src\\components\\shared\\SearchHistoryItem\\SearchHistoryItem.component.jsx":"37"},{"size":500,"mtime":499162500000,"results":"38","hashOfConfig":"39"},{"size":916,"mtime":1608738237763,"results":"40","hashOfConfig":"39"},{"size":362,"mtime":499162500000,"results":"41","hashOfConfig":"39"},{"size":182,"mtime":1603447044680,"results":"42","hashOfConfig":"39"},{"size":1016,"mtime":1602156841390,"results":"43","hashOfConfig":"39"},{"size":184,"mtime":1608738687053,"results":"44","hashOfConfig":"39"},{"size":381,"mtime":1608792151208,"results":"45","hashOfConfig":"39"},{"size":1928,"mtime":1608739316517,"results":"46","hashOfConfig":"39"},{"size":5500,"mtime":1608828393316,"results":"47","hashOfConfig":"39"},{"size":165,"mtime":1608791151604,"results":"48","hashOfConfig":"39"},{"size":507,"mtime":1603450425180,"results":"49","hashOfConfig":"39"},{"size":3074,"mtime":1608837897885,"results":"50","hashOfConfig":"39"},{"size":1689,"mtime":1608830800262,"results":"51","hashOfConfig":"39"},{"size":313,"mtime":1608828418516,"results":"52","hashOfConfig":"39"},{"size":1198,"mtime":1608837335595,"results":"53","hashOfConfig":"39"},{"size":602,"mtime":1608882387912,"results":"54","hashOfConfig":"55"},{"size":362,"mtime":499162500000,"results":"56","hashOfConfig":"55"},{"size":916,"mtime":1608738237763,"results":"57","hashOfConfig":"55"},{"size":182,"mtime":1603447044680,"results":"58","hashOfConfig":"55"},{"size":1016,"mtime":1602156841390,"results":"59","hashOfConfig":"55"},{"size":184,"mtime":1608738687053,"results":"60","hashOfConfig":"55"},{"size":777,"mtime":1608909400263,"results":"61","hashOfConfig":"55"},{"size":1757,"mtime":1608908846054,"results":"62","hashOfConfig":"55"},{"size":3723,"mtime":1608910221071,"results":"63","hashOfConfig":"55"},{"size":4668,"mtime":1608904138832,"results":"64","hashOfConfig":"55"},{"size":1928,"mtime":1608739316517,"results":"65","hashOfConfig":"55"},{"size":507,"mtime":1603450425180,"results":"66","hashOfConfig":"55"},{"size":1207,"mtime":1608908790345,"results":"67","hashOfConfig":"55"},{"size":165,"mtime":1608791151604,"results":"68","hashOfConfig":"55"},{"size":121,"mtime":1608710934827,"results":"69","hashOfConfig":"55"},{"size":183,"mtime":1608899411216,"results":"70","hashOfConfig":"55"},{"size":627,"mtime":1608908821885,"results":"71","hashOfConfig":"55"},{"size":145,"mtime":1608909300321,"results":"72","hashOfConfig":"55"},{"size":522,"mtime":1608898458573,"results":"73","hashOfConfig":"55"},{"size":1279,"mtime":1608897681238,"results":"74","hashOfConfig":"55"},{"size":513,"mtime":1608909309220,"results":"75","hashOfConfig":"55"},{"size":854,"mtime":1608909318408,"results":"76","hashOfConfig":"55"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},"8fuupg",{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"79"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"103","messages":"104","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"79"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"79"},{"filePath":"109","messages":"110","errorCount":3,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"112"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"115"},"1ybbvvc",{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"115"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"115"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"115"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"115"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"115"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"115"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"115"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"115"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"115"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"115"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"115"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"115"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151","usedDeprecatedRules":"115"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"115"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"156","usedDeprecatedRules":"115"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"115"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"115"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"163"},"C:\\My Projects\\duck-go-proxy_react\\src\\index.js",[],["164","165"],"C:\\My Projects\\duck-go-proxy_react\\src\\App.js",[],"C:\\My Projects\\duck-go-proxy_react\\src\\reportWebVitals.js",[],"C:\\My Projects\\duck-go-proxy_react\\src\\theme.js",[],"C:\\My Projects\\duck-go-proxy_react\\src\\providers\\ViewportProvider.jsx",[],"C:\\My Projects\\duck-go-proxy_react\\src\\components\\Desktop\\AppDesktop.jsx",[],"C:\\My Projects\\duck-go-proxy_react\\src\\components\\Mobile\\AppMobile.jsx",[],"C:\\My Projects\\duck-go-proxy_react\\src\\components\\Mobile\\RoutesMobile.jsx",[],"C:\\My Projects\\duck-go-proxy_react\\src\\components\\shared\\NavBar\\NavBar.jsx",["166","167","168","169","170","171","172"],"import React, { useState } from 'react';\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport { makeStyles,useTheme } from '@material-ui/core/styles';\nimport clsx from 'clsx';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport InboxIcon from '@material-ui/icons/Inbox'\nimport MailIcon from '@material-ui/icons/Mail'\nimport MonetizationOnIcon from '@material-ui/icons/MonetizationOn';\nimport MoneyIcon from '@material-ui/icons/Money';\nimport MobileRoutes from '../../Mobile/RoutesMobile';\nimport DesktopRoutes from '../../Desktop/RoutesDesktop';\nimport SearchHistory from '../../shared/SearchHistory/SearchHistory.component';\n\n\nimport {\n  AppBar,\n  Toolbar,\n  ClickAwayListener,\n  Typography,\n  IconButton,\n  Divider,\n  Drawer,\n  MenuList,\n  List,\n  ListItem,\n  ListItemIcon,\n  MenuItem,\n  ListItemText,\n } from '@material-ui/core';\n\nconst drawerWidth = 240;\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n      display: 'flex',\n    },\n    appBar: {\n      transition: theme.transitions.create(['margin', 'width'], {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.leavingScreen,\n      }),\n    },\n    appBarShift: {\n      width: `calc(100% - ${drawerWidth}px)`,\n      marginLeft: drawerWidth,\n      transition: theme.transitions.create(['margin', 'width'], {\n        easing: theme.transitions.easing.easeOut,\n        duration: theme.transitions.duration.enteringScreen,\n      }),\n    },\n    menuButton: {\n      marginRight: theme.spacing(2),\n    },\n    hide: {\n      display: 'none',\n    },\n    drawer: {\n      width: drawerWidth,\n      flexShrink: 0,\n    },\n    drawerPaper: {\n      width: drawerWidth,\n    },\n    drawerHeader: {\n      display: 'flex',\n      alignItems: 'center',\n      padding: theme.spacing(0, 1),\n      // necessary for content to be below app bar\n      ...theme.mixins.toolbar,\n      justifyContent: 'flex-end',\n    },\n    content: {\n      flexGrow: 1,\n      padding: theme.spacing(3),\n      transition: theme.transitions.create('margin', {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.leavingScreen,\n      }),\n      marginLeft: -drawerWidth,\n    },\n    contentShift: {\n      transition: theme.transitions.create('margin', {\n        easing: theme.transitions.easing.easeOut,\n        duration: theme.transitions.duration.enteringScreen,\n      }),\n      marginLeft: 0,\n    },\n  }));\n\n  const NavBar= (props) => {\n    const classes = useStyles();\n    const theme = useTheme();\n    const [isOpen, setIsOpen] = useState(false);\n    const IsMobile = props.IsMobile;\n    const toggleDrawer = (toggler) => (\n      event) => {\n      if (\n        event.type === 'keydown' &&\n        ((event).key === 'Tab' ||\n          (event).key === 'Shift')\n      ) {\n        return;\n      }\n  \n      setIsOpen(!toggler);\n    };\n    \n    const activeRoute = (routeName) => {\n      return props.location.pathname === routeName ? true : false;\n    }\n\n    return(\n      <ClickAwayListener onClickAway={ (isOpen && toggleDrawer(isOpen))}>\n    <div className={classes.root}>\n      <CssBaseline />\n      <AppBar\n        position=\"fixed\"\n        className={clsx(classes.appBar, {\n          [classes.appBarShift]: isOpen,\n        })}\n      >\n        <Toolbar>\n          <IconButton\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n            onClick={toggleDrawer(isOpen)}\n            edge=\"start\"\n            className={clsx(classes.menuButton, isOpen && classes.hide)}\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography variant=\"h6\" noWrap>\n          Duck Duck Go\n          </Typography>\n        </Toolbar>\n      </AppBar>\n      \n      <Drawer\n        className={classes.drawer}\n        variant=\"persistent\"\n        anchor=\"left\"\n        open={isOpen} \n        onClose={toggleDrawer(isOpen)}\n        classes={{\n          paper: classes.drawerPaper,\n        }}\n      >\n        <div className={classes.drawerHeader}>\n          <IconButton onClick={toggleDrawer(isOpen)}>\n            {theme.direction === 'ltr' ? <ChevronLeftIcon /> : <ChevronRightIcon />}\n          </IconButton>\n        </div>\n   \n   \n   \n        <Divider />\n\n        <div\n          className={classes.fullList}\n          role=\"presentation\"\n          onClick={toggleDrawer(isOpen)}\n          onKeyDown={toggleDrawer(isOpen)}\n        >\n          <List>\n{\n          IsMobile?\n          <SearchHistory/> //can be converted to 2 versions later, this will be mobile version\n           \n            :\n            <SearchHistory/> //can be converted to 2 versions later, this will be desktop version\n\n            \n}\n\n        {/* <MenuItem onClick={alert(\"implement me\")}>Suppliers Login</MenuItem> */}\n\n          </List>\n        </div>\n\n        <Divider />\n\n        <List>\n          {['Button1','Button2','Button3'].map((text, index) => (\n            <ListItem button key={text}>\n              <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\n              <ListItemText primary={text} />\n            </ListItem>\n          ))}\n        </List>\n       \n\n\n\n      </Drawer>\n\n\n\n      <main\n        className={clsx(classes.content, {\n          [classes.contentShift]: isOpen,\n        })}\n      >\n        <div className={classes.drawerHeader} />\n      \n      </main>\n    </div>\n    </ClickAwayListener>\n\n    )\n}\nexport default NavBar;\n","C:\\My Projects\\duck-go-proxy_react\\src\\components\\Mobile\\Home\\Home.component.jsx",[],"C:\\My Projects\\duck-go-proxy_react\\src\\components\\Desktop\\RoutesDesktop.jsx",[],"C:\\My Projects\\duck-go-proxy_react\\src\\components\\Mobile\\DuckGoForm\\DuckGoForm.component.jsx",["173","174","175","176","177"],"C:\\My Projects\\duck-go-proxy_react\\src\\components\\Mobile\\Topics\\Topics.component.jsx",["178","179"],"import React from 'react'\r\nimport { DataGrid } from '@material-ui/data-grid';\r\n\r\n\r\n\r\nconst Topics = ({props})=>{\r\n     const generateLink = (params) => (<a href=\"{params.row.URL}>\">{params.row.Title}</a>);\r\n    \r\n    // const generateLink = (params) => `<h1>${params.row.URL}/</h1>`\r\n\r\n    // function generateLink (params) {\r\n    // console.log(params)\r\n    // return`<h1>/</h1>`\r\n    // }\r\n\r\n    const columns = [\r\n        \r\n        { field: 'id', headerName: 'id', hide: true  },\r\n        // { field: 'URL', headerName: 'URL', width: 130 },\r\n        { field: 'Title', headerName: 'Title', renderCell: (params) => (\r\n            <a href={params.row.URL} target=\"_blank\"> \r\n              {params.row.Title}\r\n              \r\n            </a>\r\n          ), width: \"flex: 1\"  },\r\n      ];\r\n      \r\n      const rows = [\r\n        {\r\n            \"id\": 637444338107285755,\r\n            \"URL\": \"https://duckduckgo.com/X\",\r\n            \"Title\": \"X The 24th and third-to-last letter in the modern English alphabet and the ISO basic Latin...\"\r\n        },\r\n        {\r\n            \"id\": 637444338107285919,\r\n            \"URL\": \"https://duckduckgo.com/XXXTentacion\",\r\n            \"Title\": \"XXXTentacion An American rapper, singer, and songwriter.\"\r\n        },\r\n        {\r\n            \"id\": 637444338107285926,\r\n            \"URL\": \"https://duckduckgo.com/Malcolm_X\",\r\n            \"Title\": \"Malcolm X An American Muslim minister and human rights activist who was a popular figure during the civil...\"\r\n        }\r\n      ];\r\n\r\n\r\n    return (  <div style={{ height: 400, width: '100%' }}>\r\n    <DataGrid rows={rows} columns={columns} pageSize={5} checkboxSelection />\r\n  </div>)\r\n}\r\n\r\nexport default Topics;","C:\\My Projects\\duck-go-proxy_react\\src\\components\\shared\\SearchHistory\\SearchHistory.component.jsx",["180"],"\r\nimport React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nfunction SearchHistory(props) {\r\n    return (\r\n        <>\r\n            <h6>I Development. this will contains all of the history of the queries.</h6>\r\n        </>\r\n    )\r\n}\r\n\r\nSearchHistory.propTypes = {\r\n    \r\n}\r\n\r\nexport default SearchHistory;\r\n","C:\\My Projects\\duck-go-proxy_react\\src\\custom-hooks\\useFetch.jsx",["181","182","183","184"],"const useFetch = (url,options) => {\r\n\r\n    const [response,setResponse] = React.useState(null);\r\n    const [error, setError] = React.useState(null);\r\n\r\n    React.useEffect(()=>{\r\n        const fetchData = async () => {\r\n            try{\r\n                const res = await fetch(url,options);\r\n                const json = await res.json();\r\n                setResponse(json);\r\n            }\r\n            catch (error){\r\n                setError(error);\r\n            }\r\n        };\r\n        fetchData();\r\n    },[]);\r\n\r\n    return {response, error};\r\n};\r\n\r\n//Example\r\n\r\n// const FetchPerson = props => {\r\n\r\n//     const res = useFetch('',{});\r\n//     if(!res.response )\r\n//     return <div>Loading...</div>\r\n// }\r\n\r\n// const person = res.respone.name;\r\n// return (\r\n//     <div>\r\n//         <span>{person}</span>\r\n//     </div>>\r\n// )\r\n\r\n// <FetchPerson/>\r\n\r\n\r\n/**\r\n * The useFetch hook can be used to implement fetch in a declarative way. First, we use useState to initialize the response and error state variables. Then we use useEffect to asynchronously call fetch and update the state. Finally, we return an object that contains the response/error variables.\r\n * \r\n */\r\n\r\n export default useFetch;",["185","186"],"C:\\My Projects\\DuckGoProxy_Core\\DuckGoProxy_Core\\ClientApp\\src\\index.js",[],["187","188"],"C:\\My Projects\\DuckGoProxy_Core\\DuckGoProxy_Core\\ClientApp\\src\\reportWebVitals.js",[],"C:\\My Projects\\DuckGoProxy_Core\\DuckGoProxy_Core\\ClientApp\\src\\App.js",[],"C:\\My Projects\\DuckGoProxy_Core\\DuckGoProxy_Core\\ClientApp\\src\\theme.js",[],"C:\\My Projects\\DuckGoProxy_Core\\DuckGoProxy_Core\\ClientApp\\src\\providers\\ViewportProvider.jsx",[],"C:\\My Projects\\DuckGoProxy_Core\\DuckGoProxy_Core\\ClientApp\\src\\components\\Desktop\\AppDesktop.jsx",[],"C:\\My Projects\\DuckGoProxy_Core\\DuckGoProxy_Core\\ClientApp\\src\\components\\Mobile\\AppMobile.jsx",[],"C:\\My Projects\\DuckGoProxy_Core\\DuckGoProxy_Core\\ClientApp\\src\\components\\Mobile\\Topics\\Topics.component.jsx",["189"],"import React, {memo} from 'react'\r\nimport { DataGrid } from '@material-ui/data-grid';\r\nimport {  useSelector } from \"react-redux\";\r\nimport { getTopics } from  \"../../../redux/selectors\";\r\n\r\nimport \"./Topics.styles.scss\";\r\n\r\nconst Topics = memo(props =>{\r\n     \r\n     const state = useSelector(state => state);\r\n     const topics = getTopics(state);\r\n\r\n     const columns = [\r\n        \r\n        { field: 'id', headerName: 'id', hide: true  },\r\n        // { field: 'URL', headerName: 'URL', width: 130 },\r\n        { field: 'Title', headerName: 'Title', renderCell: (params) => (\r\n            <a href={params.row.content.URL} target=\"_blank\"> \r\n                {params.row.content.Title}\r\n              \r\n            </a>\r\n          ), width: \"flex: 1\"  },\r\n      ];\r\n      \r\n      // const rows = [\r\n      //   {\r\n      //       \"id\": 637444338107285755,\r\n      //       \"URL\": \"https://duckduckgo.com/X\",\r\n      //       \"Title\": \"X The 24th and third-to-last letter in the modern English alphabet and the ISO basic Latin...\"\r\n      //   },\r\n      //   {\r\n      //       \"id\": 637444338107285919,\r\n      //       \"URL\": \"https://duckduckgo.com/XXXTentacion\",\r\n      //       \"Title\": \"XXXTentacion An American rapper, singer, and songwriter.\"\r\n      //   },\r\n      //   {\r\n      //       \"id\": 637444338107285926,\r\n      //       \"URL\": \"https://duckduckgo.com/Malcolm_X\",\r\n      //       \"Title\": \"Malcolm X An American Muslim minister and human rights activist who was a popular figure during the civil...\"\r\n      //   }\r\n      // ];\r\n\r\n\r\n    return (  \r\n      <>\r\n     \r\n    <div id=\"topics-data-tbl\" >\r\n    <DataGrid rows={topics} columns={columns} pageSize={5} checkboxSelection />\r\n    </div>\r\n\r\n  </>\r\n  \r\n  );\r\n    });\r\n\r\nexport default Topics;\r\n\r\n\r\n","C:\\My Projects\\DuckGoProxy_Core\\DuckGoProxy_Core\\ClientApp\\src\\components\\Mobile\\DuckGoForm\\DuckGoForm.component.jsx",["190"],"import \"./DuckGoForm.styles.scss\";\r\nimport React, { useState } from 'react';\r\nimport {  useDispatch } from \"react-redux\";\r\nimport { addTopic,addSearchHistory,clearTopics } from \"../../../redux/actions\";\r\nimport {\r\n  Button,\r\n  TextField,\r\n  Grid,\r\n  Paper\r\n} from \"@material-ui/core\";\r\n\r\nconst DuckGoForm= (props) => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const [qParam, setQueryParam] = useState(props.queryParam);\r\n    const externalParam = props.queryParam;\r\n\r\n    const setResponse = (json) => json.map(x => dispatch(addTopic(x)));\r\n\r\n    const setError = (result) => console.error(result);\r\n\r\n    const    handleSubmit = (event) => {\r\n              \r\n                //console.log(queryParam)\r\n               \r\n                event.preventDefault();\r\n\r\n                dispatch(addSearchHistory(qParam)); //updates the search history list\r\n\r\n            fetchDataFromAPI();\r\n    }\r\n\r\n    const fetchDataFromAPI = () => {\r\n        const url = `DuckGo/?q=${qParam}`;\r\n        const fetchData = async () => {\r\n            try {\r\n                const res = await fetch(url, {});\r\n                const json = await res.json();\r\n\r\n                //clear previous iterations\r\n                dispatch(clearTopics()); //updates the search history list\r\n                setResponse(json); //updates main data-grid //TODO : convert it to 1 time update instead of using \"map\"\r\n              }\r\n            catch (error) {\r\n                setError(error);\r\n            }\r\n        };\r\n        fetchData();\r\n    }\r\n  \r\n      React.useEffect(() => {\r\n             setQueryParam(externalParam);\r\n             externalParam && fetchDataFromAPI();\r\n        }, [externalParam])\r\n\r\n\r\n\r\n    return (\r\n      <div>\r\n      \r\n        <Grid container spacing={0} justify=\"center\" direction=\"row\">\r\n          <Grid item>\r\n            <Grid\r\n              container\r\n              direction=\"column\"\r\n              justify=\"center\"\r\n              spacing={2}\r\n              className=\"login-form\"\r\n            >\r\n              <Paper\r\n                variant=\"elevation\"\r\n                elevation={2}\r\n                className=\"form-background\"\r\n              >\r\n                <Grid item>\r\n                </Grid>\r\n                <Grid item>\r\n                  <form onSubmit={handleSubmit}>\r\n                    <Grid container direction=\"column\" spacing={2}>\r\n                      <Grid item>\r\n                        <TextField\r\n                          type=\"text\"\r\n                          placeholder=\"Query Param\"\r\n                          fullWidth\r\n                          name=\"queryParam\"\r\n                          variant=\"outlined\"\r\n                          value={qParam}\r\n                          onChange={(event) => {\r\n                            setQueryParam(event.target.value)\r\n                          }}\r\n                          required\r\n                          autoFocus\r\n                        />\r\n                      </Grid>\r\n                     \r\n\r\n                      <Grid container spacing={0} justify=\"center\" direction=\"row\">\r\n\r\n                      <Grid item >\r\n                        <Button\r\n                          variant=\"contained\"\r\n                          color=\"primary\"\r\n                          type=\"submit\"\r\n                          className=\"button-block\"\r\n                        >\r\n                          Submit\r\n                        </Button>\r\n                      </Grid>\r\n                    </Grid>\r\n\r\n                    </Grid>\r\n                  </form>\r\n                </Grid>\r\n                \r\n              </Paper>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n      </div>\r\n\r\n);\r\n  }\r\n\r\nexport default DuckGoForm;\r\n","C:\\My Projects\\DuckGoProxy_Core\\DuckGoProxy_Core\\ClientApp\\src\\components\\shared\\NavBar\\NavBar.jsx",["191"],"import React, { useState } from 'react';\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport { makeStyles,useTheme } from '@material-ui/core/styles';\nimport clsx from 'clsx';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport SearchHistory from '../../shared/SearchHistory/SearchHistory.component';\n\n\nimport {\n  AppBar,\n  Toolbar,\n  ClickAwayListener,\n  Typography,\n  IconButton,\n  Divider,\n  Drawer,\n  List\n } from '@material-ui/core';\n\nconst drawerWidth = 240;\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n      display: 'flex',\n    },\n    appBar: {\n      transition: theme.transitions.create(['margin', 'width'], {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.leavingScreen,\n      }),\n    },\n    appBarShift: {\n      width: `calc(100% - ${drawerWidth}px)`,\n      marginLeft: drawerWidth,\n      transition: theme.transitions.create(['margin', 'width'], {\n        easing: theme.transitions.easing.easeOut,\n        duration: theme.transitions.duration.enteringScreen,\n      }),\n    },\n    menuButton: {\n      marginRight: theme.spacing(2),\n    },\n    hide: {\n      display: 'none',\n    },\n    drawer: {\n      width: drawerWidth,\n      flexShrink: 0,\n    },\n    drawerPaper: {\n      width: drawerWidth,\n    },\n    drawerHeader: {\n      display: 'flex',\n      alignItems: 'center',\n      padding: theme.spacing(0, 1),\n      // necessary for content to be below app bar\n      ...theme.mixins.toolbar,\n      justifyContent: 'flex-end',\n    },\n    content: {\n      flexGrow: 1,\n      padding: theme.spacing(3),\n      transition: theme.transitions.create('margin', {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.leavingScreen,\n      }),\n      marginLeft: -drawerWidth,\n    },\n    contentShift: {\n      transition: theme.transitions.create('margin', {\n        easing: theme.transitions.easing.easeOut,\n        duration: theme.transitions.duration.enteringScreen,\n      }),\n      marginLeft: 0,\n    },\n  }));\n\n  const NavBar= (props) => {\n    const classes = useStyles();\n    const theme = useTheme();\n    const [isOpen, setIsOpen] = useState(false);\n    const IsMobile = props.IsMobile;\n\n    const onSideBarClick = props.onSideBarClick;\n\n\n    const toggleDrawer = (toggler) => (\n      event) => {\n      if (\n        event.type === 'keydown' &&\n        ((event).key === 'Tab' ||\n          (event).key === 'Shift')\n      ) {\n        return;\n      }\n  \n      setIsOpen(!toggler);\n    };\n    \n\n    return(\n      // <ClickAwayListener onClickAway={ (isOpen && toggleDrawer(isOpen))}>\n    <div className={classes.root}>\n      <CssBaseline />\n      <AppBar\n        position=\"fixed\"\n        className={clsx(classes.appBar, {\n          [classes.appBarShift]: isOpen,\n        })}\n      >\n        <Toolbar>\n          <IconButton\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n            onClick={toggleDrawer(isOpen)}\n            edge=\"start\"\n            className={clsx(classes.menuButton, isOpen && classes.hide)}\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography variant=\"h6\" noWrap>\n          Duck Duck Go\n          </Typography>\n        </Toolbar>\n      </AppBar>\n      \n      <Drawer\n        className={classes.drawer}\n        variant=\"persistent\"\n        anchor=\"left\"\n        open={isOpen} \n        onClose={toggleDrawer(isOpen)}\n        classes={{\n          paper: classes.drawerPaper,\n        }}\n      >\n        <div className={classes.drawerHeader}>\n          <IconButton onClick={toggleDrawer(isOpen)}>\n            {theme.direction === 'ltr' ? <ChevronLeftIcon /> : <ChevronRightIcon />}\n          </IconButton>\n        </div>\n   \n   \n   \n        <Divider />\n\n        <div\n          className={classes.fullList}\n          role=\"presentation\"\n          onClick={toggleDrawer(isOpen)}\n          onKeyDown={toggleDrawer(isOpen)}\n        >\n          <List>\n        {\n          IsMobile?\n          <SearchHistory onSideBarClick = {onSideBarClick}/> //can be converted to 2 versions later, this will be mobile version\n           \n            :\n            <SearchHistory/> //can be converted to 2 versions later, this will be desktop version\n\n            \n        }\n\n          </List>\n        </div>\n\n      </Drawer>\n\n\n\n      <main\n        className={clsx(classes.content, {\n          [classes.contentShift]: isOpen,\n        })}\n      >\n        <div className={classes.drawerHeader} />\n      \n      </main>\n    </div>\n    // </ClickAwayListener>\n\n    )\n}\nexport default NavBar;\n","C:\\My Projects\\DuckGoProxy_Core\\DuckGoProxy_Core\\ClientApp\\src\\components\\Mobile\\RoutesMobile.jsx",[],"C:\\My Projects\\DuckGoProxy_Core\\DuckGoProxy_Core\\ClientApp\\src\\components\\Desktop\\RoutesDesktop.jsx",[],"C:\\My Projects\\DuckGoProxy_Core\\DuckGoProxy_Core\\ClientApp\\src\\components\\shared\\SearchHistory\\SearchHistory.component.jsx",[],"C:\\My Projects\\DuckGoProxy_Core\\DuckGoProxy_Core\\ClientApp\\src\\components\\Mobile\\Home\\Home.component.jsx",[],"C:\\My Projects\\DuckGoProxy_Core\\DuckGoProxy_Core\\ClientApp\\src\\redux\\store.js",[],"C:\\My Projects\\DuckGoProxy_Core\\DuckGoProxy_Core\\ClientApp\\src\\redux\\reducers\\index.js",[],"C:\\My Projects\\DuckGoProxy_Core\\DuckGoProxy_Core\\ClientApp\\src\\redux\\reducers\\topics.js",["192"],"import { ADD_TOPIC, CLEAR_TOPICS } from \"../actionTypes\";\r\n\r\nconst initialState = {\r\n  allIds: [],\r\n  byIds: {}\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case ADD_TOPIC: {\r\n      const { id, content } = action.payload;\r\n      return {\r\n        ...state,\r\n        allIds: [...state.allIds, id],\r\n        byIds: {\r\n          ...state.byIds,\r\n          [id]: {\r\n            content\r\n          }\r\n        }\r\n      };\r\n    }\r\n    case CLEAR_TOPICS: {\r\n      return {\r\n        allIds: [],\r\n        byIds: {}\r\n        };\r\n      }\r\n    \r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","C:\\My Projects\\DuckGoProxy_Core\\DuckGoProxy_Core\\ClientApp\\src\\redux\\actionTypes.js",[],"C:\\My Projects\\DuckGoProxy_Core\\DuckGoProxy_Core\\ClientApp\\src\\redux\\reducers\\searchHistory.js",["193"],"import { ADD_SEARCH_HISTORY } from \"../actionTypes\";\r\n\r\nconst initialState = {\r\n  allIds: [],\r\n  byIds: {}\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case ADD_SEARCH_HISTORY: {\r\n      const { id, content } = action.payload;\r\n      return {\r\n        ...state,\r\n        allIds: [...state.allIds, id],\r\n        byIds: {\r\n          ...state.byIds,\r\n          [id]: {\r\n            content\r\n          }\r\n        }\r\n      };\r\n    }\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","C:\\My Projects\\DuckGoProxy_Core\\DuckGoProxy_Core\\ClientApp\\src\\redux\\selectors.js",[],"C:\\My Projects\\DuckGoProxy_Core\\DuckGoProxy_Core\\ClientApp\\src\\redux\\actions.js",[],"C:\\My Projects\\DuckGoProxy_Core\\DuckGoProxy_Core\\ClientApp\\src\\components\\shared\\SearchHistoryItem\\SearchHistoryItem.component.jsx",["194","195","196"],"import React, { memo } from \"react\";\r\n\r\nimport {\r\n  ListItem,\r\n  Checkbox,\r\n  Button,\r\n  ListItemText,\r\n} from \"@material-ui/core\";\r\n\r\nimport {  useDispatch  } from \"react-redux\";\r\nimport { connect } from \"react-redux\";\r\n\r\n\r\nconst SearchHistoryItem = memo( (props) => {\r\n  \r\n  const dispatch = useDispatch();\r\n  const historyItem = props.historyItem;\r\n\r\n  const handleSearchHistory = props.handleSearchHistory;\r\n\r\n  return(\r\n  <ListItem divider={props.divider}>\r\n      {historyItem && historyItem.completed ? \"👌\" : \"👋\"}{\" \"}\r\n\r\n\r\n \r\n <Button htmlFor={historyItem.id+'-historyItem'}\r\n    primary={historyItem.content}  onClick={e => {handleSearchHistory(historyItem.content)}}\r\n    >   \r\n    {historyItem.content} \r\n   </Button>\r\n    \r\n  </ListItem>\r\n)});\r\n\r\n// export default SearchHistoryItem;\r\nexport default connect(null)(SearchHistoryItem);\r\n\r\n",{"ruleId":"197","replacedBy":"198"},{"ruleId":"199","replacedBy":"200"},{"ruleId":"201","severity":1,"message":"202","line":10,"column":8,"nodeType":"203","messageId":"204","endLine":10,"endColumn":26},{"ruleId":"201","severity":1,"message":"205","line":11,"column":8,"nodeType":"203","messageId":"204","endLine":11,"endColumn":17},{"ruleId":"201","severity":1,"message":"206","line":12,"column":8,"nodeType":"203","messageId":"204","endLine":12,"endColumn":20},{"ruleId":"201","severity":1,"message":"207","line":13,"column":8,"nodeType":"203","messageId":"204","endLine":13,"endColumn":21},{"ruleId":"201","severity":1,"message":"208","line":25,"column":3,"nodeType":"203","messageId":"204","endLine":25,"endColumn":11},{"ruleId":"201","severity":1,"message":"209","line":29,"column":3,"nodeType":"203","messageId":"204","endLine":29,"endColumn":11},{"ruleId":"201","severity":1,"message":"210","line":111,"column":11,"nodeType":"203","messageId":"204","endLine":111,"endColumn":22},{"ruleId":"201","severity":1,"message":"211","line":3,"column":27,"nodeType":"203","messageId":"204","endLine":3,"endColumn":36},{"ruleId":"201","severity":1,"message":"212","line":9,"column":3,"nodeType":"203","messageId":"204","endLine":9,"endColumn":9},{"ruleId":"201","severity":1,"message":"213","line":10,"column":3,"nodeType":"203","messageId":"204","endLine":10,"endColumn":13},{"ruleId":"201","severity":1,"message":"214","line":11,"column":3,"nodeType":"203","messageId":"204","endLine":11,"endColumn":10},{"ruleId":"201","severity":1,"message":"215","line":12,"column":3,"nodeType":"203","messageId":"204","endLine":12,"endColumn":7},{"ruleId":"201","severity":1,"message":"216","line":7,"column":12,"nodeType":"203","messageId":"204","endLine":7,"endColumn":24},{"ruleId":"217","severity":1,"message":"218","line":21,"column":38,"nodeType":"219","endLine":21,"endColumn":53},{"ruleId":"201","severity":1,"message":"220","line":3,"column":8,"nodeType":"203","messageId":"204","endLine":3,"endColumn":17},{"ruleId":"221","severity":2,"message":"222","line":3,"column":36,"nodeType":"203","messageId":"223","endLine":3,"endColumn":41},{"ruleId":"221","severity":2,"message":"222","line":4,"column":31,"nodeType":"203","messageId":"223","endLine":4,"endColumn":36},{"ruleId":"221","severity":2,"message":"222","line":6,"column":5,"nodeType":"203","messageId":"223","endLine":6,"endColumn":10},{"ruleId":"224","severity":1,"message":"225","line":18,"column":7,"nodeType":"226","endLine":18,"endColumn":9,"suggestions":"227"},{"ruleId":"197","replacedBy":"228"},{"ruleId":"199","replacedBy":"229"},{"ruleId":"197","replacedBy":"230"},{"ruleId":"199","replacedBy":"231"},{"ruleId":"217","severity":1,"message":"218","line":18,"column":46,"nodeType":"219","endLine":18,"endColumn":61},{"ruleId":"224","severity":1,"message":"232","line":55,"column":12,"nodeType":"226","endLine":55,"endColumn":27,"suggestions":"233"},{"ruleId":"201","severity":1,"message":"234","line":14,"column":3,"nodeType":"203","messageId":"204","endLine":14,"endColumn":20},{"ruleId":"235","severity":1,"message":"236","line":8,"column":1,"nodeType":"237","endLine":34,"endColumn":2},{"ruleId":"235","severity":1,"message":"236","line":8,"column":1,"nodeType":"237","endLine":27,"endColumn":2},{"ruleId":"201","severity":1,"message":"238","line":5,"column":3,"nodeType":"203","messageId":"204","endLine":5,"endColumn":11},{"ruleId":"201","severity":1,"message":"239","line":7,"column":3,"nodeType":"203","messageId":"204","endLine":7,"endColumn":15},{"ruleId":"201","severity":1,"message":"240","line":16,"column":9,"nodeType":"203","messageId":"204","endLine":16,"endColumn":17},"no-native-reassign",["241"],"no-negated-in-lhs",["242"],"no-unused-vars","'MonetizationOnIcon' is defined but never used.","Identifier","unusedVar","'MoneyIcon' is defined but never used.","'MobileRoutes' is defined but never used.","'DesktopRoutes' is defined but never used.","'MenuList' is defined but never used.","'MenuItem' is defined but never used.","'activeRoute' is assigned a value but never used.","'useEffect' is defined but never used.","'AppBar' is defined but never used.","'Typography' is defined but never used.","'Toolbar' is defined but never used.","'Link' is defined but never used.","'generateLink' is assigned a value but never used.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXAttribute","'PropTypes' is defined but never used.","no-undef","'React' is not defined.","undef","react-hooks/exhaustive-deps","React Hook React.useEffect has missing dependencies: 'options' and 'url'. Either include them or remove the dependency array.","ArrayExpression",["243"],["241"],["242"],["241"],["242"],"React Hook React.useEffect has a missing dependency: 'fetchDataFromAPI'. Either include it or remove the dependency array.",["244"],"'ClickAwayListener' is defined but never used.","import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","'Checkbox' is defined but never used.","'ListItemText' is defined but never used.","'dispatch' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"245","fix":"246"},{"desc":"247","fix":"248"},"Update the dependencies array to be: [options, url]",{"range":"249","text":"250"},"Update the dependencies array to be: [externalParam, fetchDataFromAPI]",{"range":"251","text":"252"},[509,511],"[options, url]",[1661,1676],"[externalParam, fetchDataFromAPI]"]